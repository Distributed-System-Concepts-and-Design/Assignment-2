syntax = "proto3";

// Raft service definition
service RaftNode {
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}

    rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
    
    rpc ServeClient(ServeClientRequest) returns (ServeClientResponse) {}
}

// Request for appending entries to the log
message AppendEntriesRequest {
    int32 term = 1;
    int32 leaderId = 2;
    message Log {
        string entries = 1;
    }
    repeated Log logEntries = 3;
    float leaseDuration = 4;
    int32 commitLogIndex = 5;
    string commitLogTerm = 6;
}

// Response to appending entries to the log
message AppendEntriesResponse {
    int32 term = 1;
    bool success = 2;
}

// Request for requesting votes in an election
message RequestVoteRequest {
    int32 term = 1;
    int32 candidateId = 2;
    int32 lastLogIndex = 3;
    int32 lastLogTerm = 4;
}

// Response to requesting votes in an election
message RequestVoteResponse {
    int32 term = 1;
    bool voteGranted = 2;
    int32 leaseDuration = 3;
}


// Request from the client to the Raft nodes
message ServeClientRequest {
    string request = 1;
}

// Response from the Raft nodes to the client
message ServeClientResponse {
    string data = 1;
    int32 leader_id = 2;
    bool success = 3;
}